'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _isUndefined2 = require('lodash/isUndefined');

var _isUndefined3 = _interopRequireDefault(_isUndefined2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var counter = 0;

var propTypePoint = _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]));

var propTypeNumber = _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]);

var Gradient = function (_Component) {
    _inherits(Gradient, _Component);

    function Gradient(props) {
        _classCallCheck(this, Gradient);

        var _this = _possibleConstructorReturn(this, (Gradient.__proto__ || Object.getPrototypeOf(Gradient)).call(this, props));

        _this.getId = _this.getId.bind(_this);
        _this.getLink = _this.getLink.bind(_this);

        _this.renderRadial = _this.renderRadial.bind(_this);
        _this.renderLinear = _this.renderLinear.bind(_this);
        return _this;
    }

    // helpers

    _createClass(Gradient, [{
        key: 'getId',
        value: function getId() {
            if (this.props.id) {
                return this.props.id;
            }
            if (!this._id) {
                counter++;
                this._id = this.props.idPrefix + counter;
            }
            return this._id;
        }
    }, {
        key: 'getLink',
        value: function getLink() {
            return 'url(#' + this.getId() + ')';
        }

        // render

    }, {
        key: 'renderRadial',
        value: function renderRadial() {
            var _props = this.props,
                center = _props.center,
                focalPoint = _props.focalPoint,
                radius = _props.radius,
                gradientUnits = _props.gradientUnits,
                spreadMethod = _props.spreadMethod,
                gradientTransform = _props.gradientTransform,
                cx = _props.cx,
                cy = _props.cy,
                fx = _props.fx,
                fy = _props.fy,
                r = _props.r;


            var _cx = (0, _isUndefined3.default)(cx) ? center && center[0] : cx;
            var _cy = (0, _isUndefined3.default)(cy) ? center && center[1] : cy;
            var _fx = (0, _isUndefined3.default)(fx) ? focalPoint && focalPoint[0] : fx;
            var _fy = (0, _isUndefined3.default)(fy) ? focalPoint && focalPoint[1] : fy;
            var _r = (0, _isUndefined3.default)(r) ? radius : r;

            return _react2.default.createElement(
                'radialGradient',
                {
                    id: this.getId(),
                    gradientUnits: gradientUnits, gradientTransform: gradientTransform, spreadMethod: spreadMethod,
                    cx: _cx, cy: _cy, fx: _fx, fy: _fy, r: _r },
                this.props.children
            );
        }
    }, {
        key: 'renderLinear',
        value: function renderLinear() {
            var _props2 = this.props,
                from = _props2.from,
                to = _props2.to,
                gradientUnits = _props2.gradientUnits,
                spreadMethod = _props2.spreadMethod,
                gradientTransform = _props2.gradientTransform,
                x1 = _props2.x1,
                y1 = _props2.y1,
                x2 = _props2.x2,
                y2 = _props2.y2;


            var _x1 = (0, _isUndefined3.default)(x1) ? from && from[0] : x1;
            var _y1 = (0, _isUndefined3.default)(y1) ? from && from[1] : y1;
            var _x2 = (0, _isUndefined3.default)(x2) ? to && to[0] : x2;
            var _y2 = (0, _isUndefined3.default)(y2) ? to && to[1] : y2;

            return _react2.default.createElement(
                'linearGradient',
                {
                    id: this.getId(),
                    gradientUnits: gradientUnits, gradientTransform: gradientTransform, spreadMethod: spreadMethod,
                    x1: _x1, y1: _y1, x2: _x2, y2: _y2 },
                this.props.children
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var type = this.props.type;


            if (type === 'radial') {
                return this.renderRadial();
            } else {
                return this.renderLinear();
            }
        }
    }]);

    return Gradient;
}(_react.Component);

exports.default = Gradient;


Gradient.displayName = 'Gradient';

Gradient.propTypes = {
    id: _propTypes2.default.string,
    idPrefix: _propTypes2.default.string,
    type: _propTypes2.default.oneOf(['linear', 'radial']),
    spreadMethod: _propTypes2.default.oneOf(['pad', 'repeat', 'reflect']),
    gradientUnits: _propTypes2.default.oneOf(['userSpaceOnUse', 'objectBoundingBox']),
    gradientTransform: _propTypes2.default.string,
    // for linear gradient
    from: propTypePoint,
    to: propTypePoint,
    // for radial gradient
    center: propTypePoint,
    focalPoint: propTypePoint,
    cx: propTypeNumber,
    cy: propTypeNumber,
    fx: propTypeNumber,
    fy: propTypeNumber,
    r: propTypeNumber,
    x1: propTypeNumber,
    y1: propTypeNumber,
    x2: propTypeNumber,
    y2: propTypeNumber,
    radius: propTypeNumber,
    children: _propTypes2.default.node
};

Gradient.defaultProps = {
    type: 'linear',
    idPrefix: 'chartGradient',
    gradientUnits: 'objectBoundingBox',
    spreadMethod: 'pad',
    // for linear gradient
    from: ['0%', '0%'],
    to: ['100%', '0%'],
    // for radial gradient
    center: ['50%', '50%']
};