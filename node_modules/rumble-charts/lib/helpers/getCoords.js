'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _isUndefined2 = require('lodash/isUndefined');

var _isUndefined3 = _interopRequireDefault(_isUndefined2);

var _isArray2 = require('lodash/isArray');

var _isArray3 = _interopRequireDefault(_isArray2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _isString2 = require('lodash/isString');

var _isString3 = _interopRequireDefault(_isString2);

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.default = getCoords;

var _normalizeNumber = require('./normalizeNumber');

var _normalizeNumber2 = _interopRequireDefault(_normalizeNumber);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getCoords(position, layerWidth, layerHeight) {
    var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
    var height = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;


    if ((0, _isString3.default)(position)) {
        position = (0, _map3.default)(position.trim().split(' '), function (value) {
            return value.trim();
        });
    }
    if ((0, _isArray3.default)(position)) {
        position = (0, _map3.default)(position, function (pos) {
            return (0, _isString3.default)(pos) ? pos.trim().toLowerCase() : pos;
        });

        var _position = position,
            _position2 = _slicedToArray(_position, 2),
            x = _position2[0],
            y = _position2[1];

        if (['top', 'bottom', 'middle'].indexOf(position[0]) !== -1) {
            y = position[0];
        }
        if (['left', 'right', 'center'].indexOf(position[1]) !== -1) {
            x = position[1];
        }
        if ((0, _isString3.default)(x)) {
            if (x === 'left') {
                x = 0;
            } else if (x === 'right') {
                x = layerWidth - width;
            } else if (x === 'center') {
                x = (layerWidth - width) / 2;
            } else {
                x = (0, _normalizeNumber2.default)(x, layerWidth);
            }
        } else if ((0, _isUndefined3.default)(x)) {
            x = 0;
        }
        if ((0, _isString3.default)(y)) {
            if (y === 'top') {
                y = 0;
            } else if (y === 'bottom') {
                y = layerHeight - height;
            } else if (y === 'middle') {
                y = (layerHeight - height) / 2;
            } else {
                y = (0, _normalizeNumber2.default)(y, layerHeight);
            }
        } else if ((0, _isUndefined3.default)(y)) {
            y = 0;
        }
        return { x: x, y: y };
    } else {
        return { x: 0, y: 0 };
    }
}