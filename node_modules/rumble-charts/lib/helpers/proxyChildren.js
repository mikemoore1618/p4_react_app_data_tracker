'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _omitBy2 = require('lodash/omitBy');

var _omitBy3 = _interopRequireDefault(_omitBy2);

var _filter2 = require('lodash/filter');

var _filter3 = _interopRequireDefault(_filter2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _isArray2 = require('lodash/isArray');

var _isArray3 = _interopRequireDefault(_isArray2);

var _isNumber2 = require('lodash/isNumber');

var _isNumber3 = _interopRequireDefault(_isNumber2);

var _isUndefined2 = require('lodash/isUndefined');

var _isUndefined3 = _interopRequireDefault(_isUndefined2);

var _defaults2 = require('lodash/defaults');

var _defaults3 = _interopRequireDefault(_defaults2);

var _isFunction2 = require('lodash/isFunction');

var _isFunction3 = _interopRequireDefault(_isFunction2);

var _defaultsDeep2 = require('lodash/defaultsDeep');

var _defaultsDeep3 = _interopRequireDefault(_defaultsDeep2);

var _assign2 = require('lodash/assign');

var _assign3 = _interopRequireDefault(_assign2);

var _pick2 = require('lodash/pick');

var _pick3 = _interopRequireDefault(_pick2);

exports.default = proxyChildren;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _normalizeSeries = require('./normalizeSeries');

var _normalizeSeries2 = _interopRequireDefault(_normalizeSeries);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var limitsPropNames = ['maxX', 'maxY', 'minX', 'minY'];

function proxyChildren(children) {
    var seriesProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};


    var limits = (0, _pick3.default)(seriesProps, limitsPropNames);
    seriesProps = (0, _normalizeSeries2.default)(seriesProps);
    var limitsCalculated = (0, _pick3.default)(seriesProps, limitsPropNames);
    var _seriesProps = seriesProps,
        series = _seriesProps.series;


    return _react2.default.Children.map(children, function (child) {

        if (!child) {
            return child;
        }

        var props = {};
        (0, _assign3.default)(props, child.props);
        (0, _defaultsDeep3.default)(props, (0, _isFunction3.default)(extraProps) ? extraProps(child) : extraProps);

        var childLimits = (0, _pick3.default)(child.props, limitsPropNames);
        var childSeriesProps = (0, _normalizeSeries2.default)((0, _defaults3.default)(child.props, {
            layerWidth: props.layerWidth,
            layerHeight: props.layerHeight
        }));
        var childLimitsCalculated = (0, _pick3.default)(childSeriesProps, limitsPropNames);

        (0, _defaults3.default)(props, childLimits, limits, childLimitsCalculated, limitsCalculated);

        if (!child.props.series) {
            if ((0, _isUndefined3.default)(child.props.seriesIndex)) {
                props.series = series;
            } else if ((0, _isNumber3.default)(child.props.seriesIndex)) {
                props.series = [series[child.props.seriesIndex]];
            } else if ((0, _isArray3.default)(child.props.seriesIndex)) {
                props.series = (0, _map3.default)(child.props.seriesIndex, function (index) {
                    return series[index];
                });
            } else if ((0, _isFunction3.default)(child.props.seriesIndex)) {
                props.series = (0, _filter3.default)(series, child.props.seriesIndex);
            } else {
                props.series = series;
            }
        } else {
            props.series = childSeriesProps.series;
        }
        props.seriesNormalized = true;

        props = (0, _omitBy3.default)(props, _isUndefined3.default);

        return _react2.default.cloneElement(child, props);
    });
}